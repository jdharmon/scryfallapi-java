/**
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is
 * regenerated.
 */

package com.scryfall.api.models;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;

/**
 * Defines values for SortOrder.
 */
public enum SortOrder {
    /** Enum value name. */
    NAME("name"),

    /** Enum value set. */
    SET("set"),

    /** Enum value released. */
    RELEASED("released"),

    /** Enum value rarity. */
    RARITY("rarity"),

    /** Enum value color. */
    COLOR("color"),

    /** Enum value usd. */
    USD("usd"),

    /** Enum value tix. */
    TIX("tix"),

    /** Enum value eur. */
    EUR("eur"),

    /** Enum value cmc. */
    CMC("cmc"),

    /** Enum value power. */
    POWER("power"),

    /** Enum value toughness. */
    TOUGHNESS("toughness"),

    /** Enum value edhrec. */
    EDHREC("edhrec"),

    /** Enum value artist. */
    ARTIST("artist");

    /** The actual serialized value for a SortOrder instance. */
    private String value;

    SortOrder(String value) {
        this.value = value;
    }

    /**
     * Parses a serialized value to a SortOrder instance.
     *
     * @param value the serialized value to parse.
     * @return the parsed SortOrder object, or null if unable to parse.
     */
    @JsonCreator
    public static SortOrder fromString(String value) {
        SortOrder[] items = SortOrder.values();
        for (SortOrder item : items) {
            if (item.toString().equalsIgnoreCase(value)) {
                return item;
            }
        }
        return null;
    }

    @JsonValue
    @Override
    public String toString() {
        return this.value;
    }
}
